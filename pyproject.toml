[project]
name = "langfarm"
version = "0.1.0"
description = "Langfarm 是 LLM 应用的 Ops 平台。使用 Langfuse 及对其改进等..."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "langfarm-app-base",
    "langfarm-io",
    "langfarm-tracing",
]


[dependency-groups]
dev = [
    "pyright >= 1.1.392",
    "poethepoet>=0.32.0",
    "pytest >= 8.3.4",
    "pytest-cov>=6.0.0",
    "ruff >= 0.8.5",
    "cookiecutter>=2.6.0",
    "testcontainers>=4.9.1",
    "langfarm-tests",
]

[tool.uv.workspace]
members = ["packages/*", "apps/*"]

[tool.uv.sources]
langfarm-tests = { workspace = true }
langfarm-io = { workspace = true }
langfarm-app-base = { workspace = true }
langfarm-tracing = { workspace = true }

[tool.ruff]
line-length = 120
fix = true
target-version = "py311"
extend-exclude = ["templates"]

[tool.ruff.format]
docstring-code-format = true

[tool.pyright]
include = ["src", "tests"]

[tool.pytest.ini_options]
addopts = "--cov=packages --cov=apps --cov-report=html"
minversion = "6.0"
testpaths = ["tests"]

[tool.coverage.run]
omit = [
    "*/tests/**/*.py"
]

[tool.poe.tasks]
# run with eg `uv run poe fmt`
fmt = "ruff format ${PWD}"
lint = "ruff check --fix ${PWD}"
pyright = "pyright ${PWD}"
test = "pytest ${PWD}"
# run all the above
all = ["fmt", "lint", "pyright", "test"]

"ci:fmt" = "ruff format --check ${PWD}"  # fail if not formatted
"ci:lint" = "ruff check ${PWD}"
